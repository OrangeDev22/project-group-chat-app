[{"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js":"11","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js":"12","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js":"13","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js":"14","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js":"15","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js":"16","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js":"17","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendsList.js":"18"},{"size":598,"mtime":1610432363698,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":2355,"mtime":1610772427205,"results":"22","hashOfConfig":"20"},{"size":660,"mtime":1609810396774,"results":"23","hashOfConfig":"20"},{"size":4630,"mtime":1610570650445,"results":"24","hashOfConfig":"20"},{"size":3692,"mtime":1610814729214,"results":"25","hashOfConfig":"20"},{"size":6680,"mtime":1610852471548,"results":"26","hashOfConfig":"20"},{"size":332,"mtime":1610575296489,"results":"27","hashOfConfig":"20"},{"size":457,"mtime":1610492089296,"results":"28","hashOfConfig":"20"},{"size":763,"mtime":1610404250872,"results":"29","hashOfConfig":"20"},{"size":5818,"mtime":1610850623487,"results":"30","hashOfConfig":"20"},{"size":621,"mtime":1610402770428,"results":"31","hashOfConfig":"20"},{"size":3159,"mtime":1610844079178,"results":"32","hashOfConfig":"20"},{"size":6448,"mtime":1610852388880,"results":"33","hashOfConfig":"20"},{"size":4208,"mtime":1610836820637,"results":"34","hashOfConfig":"20"},{"size":2210,"mtime":1610842198592,"results":"35","hashOfConfig":"20"},{"size":3382,"mtime":1610832586625,"results":"36","hashOfConfig":"20"},{"size":2234,"mtime":1610845027136,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rj0bv7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js",[],["83","84"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js",["85","86","87"],"import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { purple, red, green, deepPurple } from \"@material-ui/core/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, selectUser } from \"./features/user\";\nimport \"./App.css\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"fontsource-roboto\";\nimport { SocketProvider } from \"./contexts/SocketProvider\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[400],\n    },\n    secondary: {\n      main: red[500],\n    },\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const [id, setId] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let response = await fetch(\"http://localhost:5000/user\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        let data = await response.json();\n\n        if (data != null) {\n          dispatch(\n            login({\n              email: data.email,\n              name: data.user_name,\n              user_id: data.user_id,\n              id: data.id,\n            })\n          );\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (user.user !== null) setId(user.user.user_id);\n  }, [user.user]);\n  // const [id, setId] = useLocalStorage(\"id\");\n  // const [name, setName] = useLocalStorage(\"name\");\n\n  if (loading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <SocketProvider id={id}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/dashboard\">\n                <Dashboard />\n              </Route>\n            </Switch>\n          </Router>\n        </SocketProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js",[],["88","89"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js",["90","91"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../features/user\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, TextField, InputAdornment } from \"@material-ui/core\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport \"../css/Login.css\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n    let response = await fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(body),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (data.message === \"Authenticated\") {\r\n      dispatch(\r\n        login({\r\n          email: data.user.email,\r\n          name: data.user.name,\r\n          user_id: data.user.user_id,\r\n          id: data.user.id,\r\n        })\r\n      );\r\n      window.location.replace(\"/dashboard\");\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.user != null) {\r\n      window.location.replace(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  if (user.user != null) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <LockOpenIcon\r\n        className=\"login-icon\"\r\n        style={{\r\n          margin: \"10px\",\r\n          alignSelf: \"center\",\r\n          backgroundColor: \"#7e57c2\",\r\n          padding: \"10px\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n      />\r\n      <form\r\n        className=\"login-form\"\r\n        action=\"submit\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n      >\r\n        <div className=\"login-errors\">\r\n          <p className=\"login-element error\">{errorMessage}</p>\r\n        </div>\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"Email\"\r\n          inputRef={emailRef}\r\n          error={error}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"password\"\r\n          variant=\"outlined\"\r\n          inputRef={passwordRef}\r\n          error={error}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment\r\n                position=\"end\"\r\n                className=\"show-button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n        />\r\n        <div className=\"login-element\">\r\n          Need a new account?\r\n          <a href=\"/register\" className=\"link\">\r\n            {\" \"}\r\n            Register here :)\r\n          </a>\r\n        </div>\r\n        <Button\r\n          className=\"login-element\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Log in\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js",["92","93","94"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js",["95"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\n// const socket = useSocket();\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    channelId: null,\r\n    channelName: null,\r\n  },\r\n  reducers: {\r\n    setChannelId: (state, action) => {\r\n      state.app += action.payload;\r\n    },\r\n    // sendFriendRequest: (state, action) => {\r\n    //   const { user1, user2 } = action.payload;\r\n    //   socket.emit(\"send-friend-request\", { user1, user2 });\r\n    // },\r\n  },\r\n});\r\n\r\nexport const { setChannelId } = appSlice.actions;\r\n\r\nexport const selectChannelId = (state) => state.channelId;\r\nexport const selectChannelName = (state) => state.channelName;\r\n\r\nexport default appSlice.reducer;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js",["96","97","98","99"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js",["100"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const friendsSlice = createSlice({\r\n  name: \"friends\",\r\n  initialState: {\r\n    friends: [],\r\n    friendRequests: [],\r\n    pendingRequests: [],\r\n    usersBlocked: [],\r\n  },\r\n  reducers: {\r\n    addFriend: (state, action) => {\r\n      const newFriend = action.payload.friend;\r\n      state.friends = [newFriend, ...state.friends];\r\n    },\r\n    addFriendRequest: (state, action) => {\r\n      const newRequest = action.payload.newFriendRequest;\r\n      const tempArray = state.friendRequests;\r\n      tempArray.unshift(newRequest);\r\n      state.friendRequests = tempArray;\r\n    },\r\n    addPendingRequest: (state, action) => {\r\n      const newPendingRequest = action.payload.relationship;\r\n      const tempArray = state.pendingRequests;\r\n      tempArray.unshift(newPendingRequest);\r\n      state.pendingRequests = tempArray;\r\n    },\r\n    addBlockedUser: (state, action) => {\r\n      const newUserBlocked = action.payload.relationship;\r\n      const tempArray = state.usersBlocked;\r\n      tempArray.unshift(newUserBlocked);\r\n      state.usersBlocked = tempArray;\r\n    },\r\n    setFriends: (state, action) => {\r\n      state.friends = [...state.friends, ...action.payload];\r\n    },\r\n    setBlockedUsers: (state, action) => {\r\n      state.usersBlocked = [...state.usersBlocked, ...action.payload];\r\n    },\r\n    setPendingRequests: (state, action) => {\r\n      state.pendingRequests = [...state.pendingRequests, ...action.payload];\r\n    },\r\n    setFriendRequests: (state, action) => {\r\n      state.friendRequests = [...state.friendRequests, ...action.payload];\r\n    },\r\n    resetFriendRequests: (state) => {\r\n      state.friendRequests = state.friendRequests.slice(0, 20);\r\n    },\r\n    resetPendingRequests: (state) => {\r\n      state.pendingRequests = state.pendingRequests.slice(0, 20);\r\n    },\r\n    deleteRelationship: (state, action) => {\r\n      const { relationshipId, type } = action.payload;\r\n\r\n      switch (type) {\r\n        case \"request_sender\":\r\n          state.pendingRequests = state.pendingRequests.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n        case \"pending_second_first\":\r\n          state.friendRequests = state.friendRequests.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n        case \"blocked_by_second\":\r\n        case \"blocked_by_first\":\r\n          state.usersBlocked = state.usersBlocked.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    removeAll: (state) => {\r\n      state.friends = [];\r\n      state.friendRequests = [];\r\n      state.pendingRequests = [];\r\n      state.usersBlocked = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addFriend,\r\n  addFriendRequest,\r\n  setFriends,\r\n  setFriendRequests,\r\n  setPendingRequests,\r\n  addPendingRequest,\r\n  deleteRelationship,\r\n  resetFriendRequests,\r\n  removeAll,\r\n  addBlockedUser,\r\n  setBlockedUsers,\r\n  resetPendingRequests,\r\n} = friendsSlice.actions;\r\n\r\nexport const selectFriends = (state) => state.friends;\r\n\r\nexport default friendsSlice.reducer;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js",["101"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js",["102"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFriends, setPendingRequests } from \"../features/friendsSlice\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\nimport { fetchRequests } from \"../utils/useFetch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nfunction PendingRequestsList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const socket = useSocket();\r\n  const classes = useStyles();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const pendingRequestsList = friends.pendingRequests;\r\n\r\n  const handleScroll = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e;\r\n    let bottom = Math.ceil(scrollHeight) - Math.round(scrollTop);\r\n    if (!loading) {\r\n      if (bottom === clientHeight) {\r\n        setPage((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      let lastTimestamp =\r\n        pendingRequestsList[pendingRequestsList.length - 1].timestamp;\r\n      setLoading(true);\r\n      const newPendingRequests = await fetchRequests(\r\n        user.user.id,\r\n        20,\r\n        page,\r\n        \"pending_request\",\r\n        lastTimestamp\r\n      );\r\n      console.log(\"NEW REQUEST\", newPendingRequests);\r\n      if (newPendingRequests) {\r\n        dispatch(setPendingRequests(newPendingRequests));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (page > 1 && pendingRequestsList.length > 0) {\r\n      loadRequests();\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    // setpendingRequestsList(friends.pendingRequests);\r\n  }, [friends.pendingRequests]);\r\n\r\n  const handleCancelRequest = (id) => {\r\n    socket.emit(\"deleteRelationShip\", id, \"request_sender\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={pendingRequestsList.length}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let request = pendingRequestsList[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"liste_item\">\r\n                    <div className=\"right-panel-pending-request-item\">\r\n                      <Avatar className={classes.small}>\r\n                        {request.name.charAt(0).toUpperCase()}\r\n                      </Avatar>\r\n                      <p>{request.name}</p>\r\n                      <div className=\"pending-request-button-container\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            handleCancelRequest(request.id);\r\n                          }}\r\n                        >\r\n                          Cancel Request\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n      {loading && <h1>Loading...</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingRequestsList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js",["103"],"import React, { useRef } from \"react\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFriends } from \"../features/friendsSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n  unblock: {\r\n    color: \"white\",\r\n    marginLeft: 8,\r\n    backgroundColor: grey[800],\r\n    \"&:hover\": {\r\n      background: grey[500],\r\n    },\r\n  },\r\n}));\r\n\r\nconst handleScroll = (e) => {};\r\n\r\nfunction BlockedList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const socket = useSocket();\r\n  const friends = useSelector(selectFriends);\r\n  const blockedList = friends.usersBlocked;\r\n  const classes = useStyles();\r\n\r\n  const unblockUserHandler = (id, type) => {\r\n    socket.emit(\"deleteRelationShip\", id, type);\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={blockedList.length}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let blockedRelationship = blockedList[index];\r\n\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {blockedList && (\r\n                      <div className=\"right_panel_blocked_user_item\">\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRgith: 10 }}\r\n                        >\r\n                          {blockedRelationship.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{blockedRelationship.name}</p>\r\n                        <div className=\"blocked_user_button_container\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className={classes.unblock}\r\n                            onClick={() =>\r\n                              unblockUserHandler(\r\n                                blockedRelationship.id,\r\n                                blockedRelationship.type\r\n                              )\r\n                            }\r\n                          >\r\n                            Unblock\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlockedList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendsList.js",["104"],"import React, { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { selectFriends } from \"../features/friendsSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nfunction FriendsList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const friends = useSelector(selectFriends);\r\n  const friendsList = friends.friends;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"friends_list\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={friendsList.length}\r\n            // onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let friend = friendsList[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {friendsList && (\r\n                      <div className=\"side_bar_friend_list_item\">\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRight: 10 }}\r\n                        >\r\n                          {friend.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{friend.name}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendsList;\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":3,"column":23,"nodeType":"111","messageId":"112","endLine":3,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":58,"column":6,"nodeType":"116","endLine":58,"endColumn":8,"suggestions":"117"},{"ruleId":"105","replacedBy":"118"},{"ruleId":"107","replacedBy":"119"},{"ruleId":"109","severity":1,"message":"120","line":13,"column":7,"nodeType":"111","messageId":"112","endLine":13,"endColumn":14},{"ruleId":"114","severity":1,"message":"121","line":56,"column":6,"nodeType":"116","endLine":56,"endColumn":8,"suggestions":"122"},{"ruleId":"114","severity":1,"message":"123","line":82,"column":6,"nodeType":"116","endLine":82,"endColumn":8,"suggestions":"124"},{"ruleId":"114","severity":1,"message":"115","line":126,"column":6,"nodeType":"116","endLine":126,"endColumn":14,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"115","line":141,"column":6,"nodeType":"116","endLine":141,"endColumn":14,"suggestions":"126"},{"ruleId":"109","severity":1,"message":"127","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"128","line":50,"column":9,"nodeType":"111","messageId":"112","endLine":50,"endColumn":20},{"ruleId":"109","severity":1,"message":"129","line":54,"column":10,"nodeType":"111","messageId":"112","endLine":54,"endColumn":17},{"ruleId":"109","severity":1,"message":"130","line":54,"column":19,"nodeType":"111","messageId":"112","endLine":54,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":97,"column":6,"nodeType":"116","endLine":97,"endColumn":14,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":55,"column":7,"nodeType":"134","messageId":"135","endLine":72,"endColumn":8},{"ruleId":"114","severity":1,"message":"136","line":123,"column":6,"nodeType":"116","endLine":123,"endColumn":12,"suggestions":"137"},{"ruleId":"114","severity":1,"message":"138","line":71,"column":6,"nodeType":"116","endLine":71,"endColumn":12,"suggestions":"139"},{"ruleId":"109","severity":1,"message":"140","line":3,"column":23,"nodeType":"111","messageId":"112","endLine":3,"endColumn":34},{"ruleId":"109","severity":1,"message":"141","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],["142"],["143"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.user'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'user.user'. Either include them or remove the dependency array.",["146"],["147"],["148"],"'useSocket' is defined but never used.","'friendsList' is assigned a value but never used.","'friends' is assigned a value but never used.","'setFriends' is assigned a value but never used.",["149"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dispatch', 'friendRequests', and 'user.user.id'. Either include them or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'dispatch', 'pendingRequestsList', and 'user.user.id'. Either include them or remove the dependency array.",["151"],"'useDispatch' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"158","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [dispatch]",{"range":"166","text":"167"},"Update the dependencies array to be: [user.user]",{"range":"168","text":"169"},"Update the dependencies array to be: [dispatch, history, user.user]",{"range":"170","text":"171"},"Update the dependencies array to be: [dispatch, socket]",{"range":"172","text":"173"},{"range":"174","text":"173"},{"range":"175","text":"173"},"Update the dependencies array to be: [dispatch, friendRequests, page, user.user.id]",{"range":"176","text":"177"},"Update the dependencies array to be: [dispatch, page, pendingRequestsList, user.user.id]",{"range":"178","text":"179"},[1567,1569],"[dispatch]",[1815,1817],"[user.user]",[2408,2410],"[dispatch, history, user.user]",[3487,3495],"[dispatch, socket]",[3805,3813],[2575,2583],[3290,3296],"[dispatch, friendRequests, page, user.user.id]",[2110,2116],"[dispatch, page, pendingRequestsList, user.user.id]"]