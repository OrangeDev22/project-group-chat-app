[{"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js":"11"},{"size":635,"mtime":1610309152750,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2042,"mtime":1610324289180,"results":"15","hashOfConfig":"13"},{"size":660,"mtime":1609810396774,"results":"16","hashOfConfig":"13"},{"size":4603,"mtime":1610327954532,"results":"17","hashOfConfig":"13"},{"size":3611,"mtime":1610324397483,"results":"18","hashOfConfig":"13"},{"size":560,"mtime":1610341103123,"results":"19","hashOfConfig":"13"},{"size":246,"mtime":1610309679861,"results":"20","hashOfConfig":"13"},{"size":504,"mtime":1610310692711,"results":"21","hashOfConfig":"13"},{"size":502,"mtime":1610307781725,"results":"22","hashOfConfig":"13"},{"size":1586,"mtime":1610340943973,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1rj0bv7",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js",["51"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["52","53"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js",["54","55","56","57","58"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { deepPurple } from \"@material-ui/core/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, selectUser } from \"./features/user\";\nimport \"./App.css\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"fontsource-roboto\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[400],\n    },\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  let history = useHistory();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(async () => {\n    let response = await fetch(\"http://localhost:5000/user\", {\n      method: \"GET\",\n      credentials: \"include\",\n    });\n    try {\n      let data = await response.json();\n      console.log(\"data in app\", data);\n      if (data != null) {\n        dispatch(\n          login({\n            email: data.email,\n            name: data.user_name,\n          })\n        );\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  // const [id, setId] = useLocalStorage(\"id\");\n  // const [name, setName] = useLocalStorage(\"name\");\n\n  if (loading) {\n    return <h1>loading...</h1>;\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js",["59"],"import React, { useRef, useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/user\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport \"./Register.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Register() {\r\n  let history = useHistory();\r\n  const user = useSelector(selectUser);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !email || !password || !password2 || name.includes(\" \")) {\r\n      setError(true);\r\n      let message = name.includes(\" \")\r\n        ? \"Name format not valid\"\r\n        : \"Please verify your fields\";\r\n      setErrorMessages([{ message }]);\r\n    } else {\r\n      setError(false);\r\n      setErrorMessages([]);\r\n      let user_id = uuidv4();\r\n      try {\r\n        const body = {\r\n          name: name,\r\n          email: email,\r\n          user_id: user_id,\r\n          password: password,\r\n          password2: password2,\r\n        };\r\n        const response = await fetch(\"http://localhost:5000/users/register\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        });\r\n        const jsonData = await response.json();\r\n        if (jsonData.length > 0) {\r\n          setErrorMessages(jsonData);\r\n        } else {\r\n          // console.log(\"submit working\");\r\n          setName(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setPassword2(\"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"error\", error.message);\r\n      }\r\n    }\r\n  };\r\n  if (user.user != null) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n  return (\r\n    <div className=\"register\">\r\n      <LockOutlinedIcon\r\n        fontSize=\"large\"\r\n        className=\"register-icon\"\r\n        style={{\r\n          margin: \"10px\",\r\n          alignSelf: \"center\",\r\n          backgroundColor: \"#7e57c2\",\r\n          padding: \"10px\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n      />\r\n      <form\r\n        autoComplete=\"off\"\r\n        action=\"submit\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n        className=\"register-form\"\r\n      >\r\n        <div className=\"\">\r\n          {errorMessages.map((error, index) => (\r\n            <p className=\"register-element error\" key={index}>\r\n              {error.message}\r\n            </p>\r\n          ))}\r\n        </div>\r\n\r\n        <TextField\r\n          className=\"register-element\"\r\n          error={error}\r\n          required\r\n          id=\"outlined-required\"\r\n          placeholder=\"User Name\"\r\n          variant=\"outlined\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          className=\"register-element\"\r\n          error={error}\r\n          required\r\n          id=\"outlined-required\"\r\n          placeholder=\"Email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          className=\"register-element\"\r\n          error={error}\r\n          required\r\n          id=\"outlined-required\"\r\n          placeholder=\"Password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          className=\"register-element\"\r\n          error={error}\r\n          required\r\n          value={password2}\r\n          id=\"outlined-required\"\r\n          placeholder=\"Repeat Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n        />\r\n        <div className=\"register-element\">\r\n          Already have an account?{\" \"}\r\n          <a href=\"/\" className=\"link\">\r\n            {\" \"}\r\n            Log in here :)\r\n          </a>\r\n        </div>\r\n        <div className=\"register-button-container\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size={\"large\"}\r\n            className=\"register-element\"\r\n          >\r\n            Create User\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js",["60"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../features/user\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, TextField, InputAdornment } from \"@material-ui/core\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport \"../css/Login.css\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n    let response = await fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(body),\r\n    });\r\n    let data = await response.json();\r\n    // console.log(\"data\", data.message);\r\n    if (data.message === \"Authenticated\") {\r\n      setErrorMessage(\"\");\r\n      setError(false);\r\n      dispatch(\r\n        login({\r\n          email: data.user.email,\r\n          name: data.user.name,\r\n        })\r\n      );\r\n\r\n      history.push(\"/dashboard\");\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage(data.message);\r\n      // console.log(\"failed\", data.message);\r\n    }\r\n  };\r\n\r\n  if (user.user != null) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <LockOpenIcon\r\n        className=\"login-icon\"\r\n        style={{\r\n          margin: \"10px\",\r\n          alignSelf: \"center\",\r\n          backgroundColor: \"#7e57c2\",\r\n          padding: \"10px\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n      />\r\n      <form\r\n        className=\"login-form\"\r\n        action=\"submit\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n      >\r\n        <div className=\"login-errors\">\r\n          <p className=\"login-element error\">{errorMessage}</p>\r\n        </div>\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"Email\"\r\n          inputRef={emailRef}\r\n          error={error}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"password\"\r\n          variant=\"outlined\"\r\n          inputRef={passwordRef}\r\n          error={error}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment\r\n                position=\"end\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n        />\r\n        <div className=\"login-element\">\r\n          Need a new account?\r\n          <a href=\"/register\" className=\"link\">\r\n            {\" \"}\r\n            Register here :)\r\n          </a>\r\n        </div>\r\n        <Button\r\n          className=\"login-element\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Log in\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js",["61","62"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js",["63","64","65","66"],{"ruleId":"67","severity":1,"message":"68","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":21},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":23},{"ruleId":"67","severity":1,"message":"76","line":25,"column":7,"nodeType":"69","messageId":"70","endLine":25,"endColumn":14},{"ruleId":"67","severity":1,"message":"77","line":26,"column":9,"nodeType":"69","messageId":"70","endLine":26,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":30,"column":13,"nodeType":"80","endLine":50,"endColumn":4},{"ruleId":"78","severity":1,"message":"81","line":50,"column":6,"nodeType":"82","endLine":50,"endColumn":8,"suggestions":"83"},{"ruleId":"67","severity":1,"message":"84","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":23},{"ruleId":"67","severity":1,"message":"85","line":1,"column":35,"nodeType":"69","messageId":"70","endLine":1,"endColumn":44},{"ruleId":"67","severity":1,"message":"86","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"87","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":20},{"ruleId":"67","severity":1,"message":"88","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":16},{"ruleId":"67","severity":1,"message":"89","line":4,"column":18,"nodeType":"69","messageId":"70","endLine":4,"endColumn":25},{"ruleId":"67","severity":1,"message":"90","line":4,"column":27,"nodeType":"69","messageId":"70","endLine":4,"endColumn":37},{"ruleId":"67","severity":1,"message":"91","line":16,"column":9,"nodeType":"69","messageId":"70","endLine":16,"endColumn":16},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'useLocalStorage' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [dispatch]",{"range":"97","text":"98"},[1419,1421],"[dispatch]"]