[{"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js":"11","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js":"12","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js":"13","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js":"14","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js":"15","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js":"16","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js":"17","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendsList.js":"18","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Settings.js":"19","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\ConversationsList.js":"20","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\OpenConversation.js":"21"},{"size":598,"mtime":1610432363698,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2372,"mtime":1610996712606,"results":"25","hashOfConfig":"23"},{"size":660,"mtime":1609810396774,"results":"26","hashOfConfig":"23"},{"size":4630,"mtime":1610570650445,"results":"27","hashOfConfig":"23"},{"size":3692,"mtime":1610814729214,"results":"28","hashOfConfig":"23"},{"size":7969,"mtime":1611123642694,"results":"29","hashOfConfig":"23"},{"size":332,"mtime":1610575296489,"results":"30","hashOfConfig":"23"},{"size":457,"mtime":1610492089296,"results":"31","hashOfConfig":"23"},{"size":1291,"mtime":1611109426692,"results":"32","hashOfConfig":"23"},{"size":9823,"mtime":1611121329893,"results":"33","hashOfConfig":"23"},{"size":621,"mtime":1610402770428,"results":"34","hashOfConfig":"23"},{"size":3370,"mtime":1610916125555,"results":"35","hashOfConfig":"23"},{"size":6448,"mtime":1610857082771,"results":"36","hashOfConfig":"23"},{"size":4208,"mtime":1610836820637,"results":"37","hashOfConfig":"23"},{"size":2782,"mtime":1611125611632,"results":"38","hashOfConfig":"23"},{"size":3382,"mtime":1610832586625,"results":"39","hashOfConfig":"23"},{"size":5678,"mtime":1611125601328,"results":"40","hashOfConfig":"23"},{"size":1135,"mtime":1610866791930,"results":"41","hashOfConfig":"23"},{"size":2581,"mtime":1611030289867,"results":"42","hashOfConfig":"23"},{"size":4979,"mtime":1611119369180,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1rj0bv7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js",[],["94","95"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js",["96","97","98"],"import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { purple, red, green, deepPurple } from \"@material-ui/core/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, selectUser } from \"./features/user\";\nimport \"./App.css\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"fontsource-roboto\";\nimport { SocketProvider } from \"./contexts/SocketProvider\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[400],\n    },\n    secondary: {\n      main: red[500],\n    },\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const [id, setId] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let response = await fetch(\"http://localhost:5000/user\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        let data = await response.json();\n\n        if (data != null) {\n          dispatch(\n            login({\n              email: data.email,\n              name: data.user_name,\n              user_id: data.user_id,\n              id: data.id,\n            })\n          );\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (user.user !== null) setId(user.user.user_id);\n  }, [user.user]);\n  // const [id, setId] = useLocalStorage(\"id\");\n  // const [name, setName] = useLocalStorage(\"name\");\n\n  if (loading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <SocketProvider id={id}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/dashboard/:conversationId?\">\n                <Dashboard />\n              </Route>\n            </Switch>\n          </Router>\n        </SocketProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js",["99","100"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../features/user\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, TextField, InputAdornment } from \"@material-ui/core\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport \"../css/Login.css\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n    let response = await fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(body),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (data.message === \"Authenticated\") {\r\n      dispatch(\r\n        login({\r\n          email: data.user.email,\r\n          name: data.user.name,\r\n          user_id: data.user.user_id,\r\n          id: data.user.id,\r\n        })\r\n      );\r\n      window.location.replace(\"/dashboard\");\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.user != null) {\r\n      window.location.replace(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  if (user.user != null) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <LockOpenIcon\r\n        className=\"login-icon\"\r\n        style={{\r\n          margin: \"10px\",\r\n          alignSelf: \"center\",\r\n          backgroundColor: \"#7e57c2\",\r\n          padding: \"10px\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n      />\r\n      <form\r\n        className=\"login-form\"\r\n        action=\"submit\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n      >\r\n        <div className=\"login-errors\">\r\n          <p className=\"login-element error\">{errorMessage}</p>\r\n        </div>\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"Email\"\r\n          inputRef={emailRef}\r\n          error={error}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"password\"\r\n          variant=\"outlined\"\r\n          inputRef={passwordRef}\r\n          error={error}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment\r\n                position=\"end\"\r\n                className=\"show-button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n        />\r\n        <div className=\"login-element\">\r\n          Need a new account?\r\n          <a href=\"/register\" className=\"link\">\r\n            {\" \"}\r\n            Register here :)\r\n          </a>\r\n        </div>\r\n        <Button\r\n          className=\"login-element\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Log in\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js",["101","102"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js",["103"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js",["104"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js",["105"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const friendsSlice = createSlice({\r\n  name: \"friends\",\r\n  initialState: {\r\n    friends: [],\r\n    friendRequests: [],\r\n    pendingRequests: [],\r\n    usersBlocked: [],\r\n  },\r\n  reducers: {\r\n    addFriend: (state, action) => {\r\n      const newFriend = action.payload.friend;\r\n      state.friends = [newFriend, ...state.friends];\r\n    },\r\n    addFriendRequest: (state, action) => {\r\n      const newRequest = action.payload.newFriendRequest;\r\n      const tempArray = state.friendRequests;\r\n      tempArray.unshift(newRequest);\r\n      state.friendRequests = tempArray;\r\n    },\r\n    addPendingRequest: (state, action) => {\r\n      const newPendingRequest = action.payload.relationship;\r\n      const tempArray = state.pendingRequests;\r\n      tempArray.unshift(newPendingRequest);\r\n      state.pendingRequests = tempArray;\r\n    },\r\n    addBlockedUser: (state, action) => {\r\n      const newUserBlocked = action.payload.relationship;\r\n      state.usersBlocked = [newUserBlocked, ...state.usersBlocked];\r\n    },\r\n    setFriends: (state, action) => {\r\n      state.friends = [...state.friends, ...action.payload];\r\n    },\r\n    setBlockedUsers: (state, action) => {\r\n      state.usersBlocked = [...state.usersBlocked, ...action.payload];\r\n    },\r\n    setPendingRequests: (state, action) => {\r\n      state.pendingRequests = [...state.pendingRequests, ...action.payload];\r\n    },\r\n    setFriendRequests: (state, action) => {\r\n      state.friendRequests = [...state.friendRequests, ...action.payload];\r\n    },\r\n    resetFriends: (state) => {\r\n      state.friends = state.friends.slice(0, 20);\r\n    },\r\n    resetFriendRequests: (state) => {\r\n      state.friendRequests = state.friendRequests.slice(0, 20);\r\n    },\r\n    resetPendingRequests: (state) => {\r\n      state.pendingRequests = state.pendingRequests.slice(0, 20);\r\n    },\r\n    deleteRelationship: (state, action) => {\r\n      const { relationshipId, type } = action.payload;\r\n\r\n      switch (type) {\r\n        case \"friends\":\r\n          state.friends = state.friends.filter(\r\n            (friend) => friend.id !== relationshipId\r\n          );\r\n          break;\r\n        case \"request_sender\":\r\n          state.pendingRequests = state.pendingRequests.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n        case \"pending_second_first\":\r\n          state.friendRequests = state.friendRequests.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n        case \"blocked_by_second\":\r\n        case \"blocked_by_first\":\r\n          state.usersBlocked = state.usersBlocked.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    removeAll: (state) => {\r\n      state.friends = [];\r\n      state.friendRequests = [];\r\n      state.pendingRequests = [];\r\n      state.usersBlocked = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addFriend,\r\n  addFriendRequest,\r\n  setFriends,\r\n  setFriendRequests,\r\n  setPendingRequests,\r\n  addPendingRequest,\r\n  resetFriends,\r\n  deleteRelationship,\r\n  resetFriendRequests,\r\n  removeAll,\r\n  addBlockedUser,\r\n  setBlockedUsers,\r\n  resetPendingRequests,\r\n} = friendsSlice.actions;\r\n\r\nexport const selectFriends = (state) => state.friends;\r\n\r\nexport default friendsSlice.reducer;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js",["106"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { green, grey } from \"@material-ui/core/colors\";\r\nimport {\r\n  selectFriends,\r\n  setFriendRequests,\r\n  deleteRelationship,\r\n  addBlockedUser,\r\n} from \"../features/friendsSlice\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { fetchRequests, blockRelationship } from \"../utils/useFetch\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n  accept: {\r\n    color: \"white\",\r\n    marginRight: 8,\r\n    backgroundColor: green[400],\r\n    \"&:hover\": {\r\n      background: green[500],\r\n    },\r\n  },\r\n  blockUser: {\r\n    color: \"white\",\r\n    marginLeft: 8,\r\n    backgroundColor: grey[800],\r\n    \"&:hover\": {\r\n      background: grey[500],\r\n    },\r\n  },\r\n}));\r\n\r\nfunction FriendRequestList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const socket = useSocket();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const friendRequests = friends.friendRequests;\r\n  const classes = useStyles();\r\n  const numberPerPage = 20;\r\n\r\n  const handleScroll = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e;\r\n    let bottom = Math.ceil(scrollHeight) - Math.round(scrollTop);\r\n    if (!loading) {\r\n      if (bottom === clientHeight) {\r\n        setPage((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addFriendHandler = async (id, receiverName, senderName) => {\r\n    console.log(\"USER ID\", user.user_id);\r\n    socket.emit(\"addFriend\", id, senderName, receiverName, user.user.user_id);\r\n  };\r\n\r\n  const blockUserhandler = async (id, name) => {\r\n    let response = await blockRelationship(id, \"blocked_by_second\");\r\n\r\n    if (response) {\r\n      dispatch(\r\n        deleteRelationship({\r\n          relationshipId: id,\r\n          type: \"pending_second_first\",\r\n        })\r\n      );\r\n      dispatch(\r\n        addBlockedUser({\r\n          relationship: {\r\n            id,\r\n            name,\r\n            type: \"blocked_by_second\",\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDenyRequest = async (id) => {\r\n    socket.emit(\"deleteRelationShip\", id, \"pending_second_first\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      let lastTimestamp = friendRequests[friendRequests.length - 1].timestamp;\r\n      setLoading(true);\r\n      const newFriendRequests = await fetchRequests(\r\n        user.user.id,\r\n        numberPerPage,\r\n        page,\r\n        \"friend_request\",\r\n        lastTimestamp\r\n      );\r\n      if (newFriendRequests) {\r\n        dispatch(setFriendRequests(newFriendRequests));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (page > 1 && friendRequests.length > 0) {\r\n      loadRequests();\r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={friendRequests.length}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let request = friendRequests[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {friendRequests && (\r\n                      <div\r\n                        className=\"right-panel-friend-request-item\"\r\n                        key={request.id}\r\n                      >\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRight: 10 }}\r\n                        >\r\n                          {request.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{request.name}</p>\r\n                        <div className=\"friend-request-buttons-container\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className={classes.accept}\r\n                            onClick={() =>\r\n                              addFriendHandler(\r\n                                request.id,\r\n                                user.user.name,\r\n                                request.name\r\n                              )\r\n                            }\r\n                          >\r\n                            Accept\r\n                          </Button>\r\n\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={() => handleDenyRequest(request.id)}\r\n                            style={{ marginLeft: 8 }}\r\n                          >\r\n                            Deny\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            onClick={() =>\r\n                              blockUserhandler(request.id, request.name)\r\n                            }\r\n                            className={classes.blockUser}\r\n                          >\r\n                            Block\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n\r\n      {loading && <h1>Loading...</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendRequestList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js",["107"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFriends, setPendingRequests } from \"../features/friendsSlice\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\nimport { fetchRequests } from \"../utils/useFetch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nfunction PendingRequestsList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const socket = useSocket();\r\n  const classes = useStyles();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const pendingRequestsList = friends.pendingRequests;\r\n\r\n  const handleScroll = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e;\r\n    let bottom = Math.ceil(scrollHeight) - Math.round(scrollTop);\r\n    if (!loading) {\r\n      if (bottom === clientHeight) {\r\n        setPage((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      let lastTimestamp =\r\n        pendingRequestsList[pendingRequestsList.length - 1].timestamp;\r\n      setLoading(true);\r\n      const newPendingRequests = await fetchRequests(\r\n        user.user.id,\r\n        20,\r\n        page,\r\n        \"pending_request\",\r\n        lastTimestamp\r\n      );\r\n      console.log(\"NEW REQUEST\", newPendingRequests);\r\n      if (newPendingRequests) {\r\n        dispatch(setPendingRequests(newPendingRequests));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (page > 1 && pendingRequestsList.length > 0) {\r\n      loadRequests();\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    // setpendingRequestsList(friends.pendingRequests);\r\n  }, [friends.pendingRequests]);\r\n\r\n  const handleCancelRequest = (id) => {\r\n    socket.emit(\"deleteRelationShip\", id, \"request_sender\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={pendingRequestsList.length}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let request = pendingRequestsList[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"liste_item\">\r\n                    <div className=\"right-panel-pending-request-item\">\r\n                      <Avatar className={classes.small}>\r\n                        {request.name.charAt(0).toUpperCase()}\r\n                      </Avatar>\r\n                      <p>{request.name}</p>\r\n                      <div className=\"pending-request-button-container\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            handleCancelRequest(request.id);\r\n                          }}\r\n                        >\r\n                          Cancel Request\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n      {loading && <h1>Loading...</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingRequestsList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js",["108"],"import React, { useRef } from \"react\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFriends } from \"../features/friendsSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n  unblock: {\r\n    color: \"white\",\r\n    marginLeft: 8,\r\n    backgroundColor: grey[800],\r\n    \"&:hover\": {\r\n      background: grey[500],\r\n    },\r\n  },\r\n}));\r\n\r\nconst handleScroll = (e) => {};\r\n\r\nfunction BlockedList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const socket = useSocket();\r\n  const friends = useSelector(selectFriends);\r\n  const blockedList = friends.usersBlocked;\r\n  const classes = useStyles();\r\n\r\n  const unblockUserHandler = (id, type) => {\r\n    socket.emit(\"deleteRelationShip\", id, type);\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={blockedList.length}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let blockedRelationship = blockedList[index];\r\n\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {blockedList && (\r\n                      <div className=\"right_panel_blocked_user_item\">\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRgith: 10 }}\r\n                        >\r\n                          {blockedRelationship.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{blockedRelationship.name}</p>\r\n                        <div className=\"blocked_user_button_container\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className={classes.unblock}\r\n                            onClick={() =>\r\n                              unblockUserHandler(\r\n                                blockedRelationship.id,\r\n                                blockedRelationship.type\r\n                              )\r\n                            }\r\n                          >\r\n                            Unblock\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlockedList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendsList.js",["109"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Settings.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\ConversationsList.js",["110"],"import React, { useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { selectApp, setSelectedConversation } from \"../features/app\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nfunction ConversationsList() {\r\n  const history = useHistory();\r\n  const app = useSelector(selectApp);\r\n  const dispatch = useDispatch();\r\n  const conversations = app.conversations;\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n\r\n  const clickHandler = (id, index) => {\r\n    dispatch(setSelectedConversation(index));\r\n    history.push(`/dashboard/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"conversations\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            rowCount={conversations.length}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let conversation = conversations[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div\r\n                    style={style}\r\n                    className={`list_item_wrapper ${\r\n                      index === app.selectedConversationIndex\r\n                        ? \"selected_conversation\"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={() => clickHandler(conversation.id, index)}\r\n                  >\r\n                    {conversations.length > 0 && (\r\n                      <>\r\n                        <div className=\"conversations_list_item\">\r\n                          {conversation.recipients.map((recipient, index) => {\r\n                            return (\r\n                              <div className=\"conversation_list_recipients\">\r\n                                <span>{recipient.name}</span>\r\n                              </div>\r\n                            );\r\n                          })}{\" \"}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConversationsList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\OpenConversation.js",["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"117","severity":1,"message":"121","line":3,"column":23,"nodeType":"119","messageId":"120","endLine":3,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":58,"column":6,"nodeType":"124","endLine":58,"endColumn":8,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"126","line":13,"column":7,"nodeType":"119","messageId":"120","endLine":13,"endColumn":14},{"ruleId":"122","severity":1,"message":"127","line":56,"column":6,"nodeType":"124","endLine":56,"endColumn":8,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"129","line":103,"column":6,"nodeType":"124","endLine":103,"endColumn":8,"suggestions":"130"},{"ruleId":"122","severity":1,"message":"123","line":190,"column":6,"nodeType":"124","endLine":190,"endColumn":34,"suggestions":"131"},{"ruleId":"117","severity":1,"message":"132","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":154,"column":6,"nodeType":"124","endLine":154,"endColumn":14,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":56,"column":7,"nodeType":"136","messageId":"137","endLine":78,"endColumn":8},{"ruleId":"122","severity":1,"message":"138","line":123,"column":6,"nodeType":"124","endLine":123,"endColumn":12,"suggestions":"139"},{"ruleId":"122","severity":1,"message":"140","line":71,"column":6,"nodeType":"124","endLine":71,"endColumn":12,"suggestions":"141"},{"ruleId":"117","severity":1,"message":"142","line":3,"column":23,"nodeType":"119","messageId":"120","endLine":3,"endColumn":34},{"ruleId":"122","severity":1,"message":"143","line":114,"column":6,"nodeType":"124","endLine":114,"endColumn":12,"suggestions":"144"},{"ruleId":"117","severity":1,"message":"145","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"146","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"147","line":91,"column":6,"nodeType":"124","endLine":91,"endColumn":8,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.user'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'prefixedKey', and 'user.user'. Either include them or remove the dependency array.",["153"],["154"],"'useLocalStorage' is defined but never used.",["155"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dispatch', 'friendRequests', and 'user.user.id'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'dispatch', 'pendingRequestsList', and 'user.user.id'. Either include them or remove the dependency array.",["157"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'friendsList', and 'user.user.id'. Either include them or remove the dependency array.",["158"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'app.conversations', 'conversationId', 'dispatch', 'history', and 'selectedConversationIndex'. Either include them or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [dispatch]",{"range":"178","text":"179"},"Update the dependencies array to be: [user.user]",{"range":"180","text":"181"},"Update the dependencies array to be: [dispatch, history, prefixedKey, user.user]",{"range":"182","text":"183"},"Update the dependencies array to be: [socket, app, conversations, dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [dispatch, socket]",{"range":"186","text":"187"},"Update the dependencies array to be: [dispatch, friendRequests, page, user.user.id]",{"range":"188","text":"189"},"Update the dependencies array to be: [dispatch, page, pendingRequestsList, user.user.id]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch, friendsList, page, user.user.id]",{"range":"192","text":"193"},"Update the dependencies array to be: [app.conversations, conversationId, dispatch, history, selectedConversationIndex]",{"range":"194","text":"195"},[1567,1569],"[dispatch]",[1815,1817],"[user.user]",[3076,3078],"[dispatch, history, prefixedKey, user.user]",[5329,5357],"[socket, app, conversations, dispatch]",[4082,4090],"[dispatch, socket]",[3290,3296],"[dispatch, friendRequests, page, user.user.id]",[2110,2116],"[dispatch, page, pendingRequestsList, user.user.id]",[3184,3190],"[dispatch, friendsList, page, user.user.id]",[2611,2613],"[app.conversations, conversationId, dispatch, history, selectedConversationIndex]"]