[{"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js":"11","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js":"12","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js":"13","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js":"14","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js":"15","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js":"16","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js":"17"},{"size":598,"mtime":1610432363698,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2355,"mtime":1610772427205,"results":"21","hashOfConfig":"19"},{"size":660,"mtime":1609810396774,"results":"22","hashOfConfig":"19"},{"size":4630,"mtime":1610570650445,"results":"23","hashOfConfig":"19"},{"size":3692,"mtime":1610814729214,"results":"24","hashOfConfig":"19"},{"size":6569,"mtime":1610834608586,"results":"25","hashOfConfig":"19"},{"size":332,"mtime":1610575296489,"results":"26","hashOfConfig":"19"},{"size":457,"mtime":1610492089296,"results":"27","hashOfConfig":"19"},{"size":763,"mtime":1610404250872,"results":"28","hashOfConfig":"19"},{"size":5477,"mtime":1610836853260,"results":"29","hashOfConfig":"19"},{"size":621,"mtime":1610402770428,"results":"30","hashOfConfig":"19"},{"size":3052,"mtime":1610833151724,"results":"31","hashOfConfig":"19"},{"size":5950,"mtime":1610834598478,"results":"32","hashOfConfig":"19"},{"size":4208,"mtime":1610836820637,"results":"33","hashOfConfig":"19"},{"size":1715,"mtime":1610834168863,"results":"34","hashOfConfig":"19"},{"size":3382,"mtime":1610832586625,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rj0bv7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js",[],["79","80"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js",["81","82","83"],"import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { purple, red, green, deepPurple } from \"@material-ui/core/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, selectUser } from \"./features/user\";\nimport \"./App.css\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"fontsource-roboto\";\nimport { SocketProvider } from \"./contexts/SocketProvider\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[400],\n    },\n    secondary: {\n      main: red[500],\n    },\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const [id, setId] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let response = await fetch(\"http://localhost:5000/user\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        let data = await response.json();\n\n        if (data != null) {\n          dispatch(\n            login({\n              email: data.email,\n              name: data.user_name,\n              user_id: data.user_id,\n              id: data.id,\n            })\n          );\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (user.user !== null) setId(user.user.user_id);\n  }, [user.user]);\n  // const [id, setId] = useLocalStorage(\"id\");\n  // const [name, setName] = useLocalStorage(\"name\");\n\n  if (loading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <SocketProvider id={id}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/dashboard\">\n                <Dashboard />\n              </Route>\n            </Switch>\n          </Router>\n        </SocketProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js",[],["84","85"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js",["86","87"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../features/user\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, TextField, InputAdornment } from \"@material-ui/core\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport \"../css/Login.css\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n    let response = await fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(body),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (data.message === \"Authenticated\") {\r\n      dispatch(\r\n        login({\r\n          email: data.user.email,\r\n          name: data.user.name,\r\n          user_id: data.user.user_id,\r\n          id: data.user.id,\r\n        })\r\n      );\r\n      window.location.replace(\"/dashboard\");\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.user != null) {\r\n      window.location.replace(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  if (user.user != null) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <LockOpenIcon\r\n        className=\"login-icon\"\r\n        style={{\r\n          margin: \"10px\",\r\n          alignSelf: \"center\",\r\n          backgroundColor: \"#7e57c2\",\r\n          padding: \"10px\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n      />\r\n      <form\r\n        className=\"login-form\"\r\n        action=\"submit\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n      >\r\n        <div className=\"login-errors\">\r\n          <p className=\"login-element error\">{errorMessage}</p>\r\n        </div>\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"Email\"\r\n          inputRef={emailRef}\r\n          error={error}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"password\"\r\n          variant=\"outlined\"\r\n          inputRef={passwordRef}\r\n          error={error}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment\r\n                position=\"end\"\r\n                className=\"show-button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n        />\r\n        <div className=\"login-element\">\r\n          Need a new account?\r\n          <a href=\"/register\" className=\"link\">\r\n            {\" \"}\r\n            Register here :)\r\n          </a>\r\n        </div>\r\n        <Button\r\n          className=\"login-element\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Log in\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js",["88","89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SideBar from \"./SideBar\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { selectUser, logout } from \"../features/user\";\r\nimport FriendRequestList from \"./FriendRequestList\";\r\nimport { fetchRequests, fetchBlockedRelationships } from \"../utils/useFetch\";\r\nimport BlockedList from \"./BlockedList\";\r\nimport {\r\n  selectFriends,\r\n  addFriendRequest,\r\n  setFriendRequests,\r\n  resetFriendRequests,\r\n  resetPendingRequests,\r\n  setPendingRequests,\r\n  deleteRelationship,\r\n  setBlockedUsers,\r\n  removeAll,\r\n} from \"../features/friendsSlice\";\r\nimport \"../css/Dashboard.css\";\r\nimport PenddingRequests from \"./PendingRequestsList\";\r\n\r\nfunction Dashboard() {\r\n  let history = useHistory();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const [selectedButton, setSelectedButton] = useState(2);\r\n  const [name, setName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const socket = useSocket();\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      const FriendsRequests = await fetchRequests(\r\n        user.user.id,\r\n        20,\r\n        1,\r\n        \"friend_request\",\r\n        +new Date()\r\n      );\r\n      const PenddingRequests = await fetchRequests(\r\n        user.user.id,\r\n        20,\r\n        1,\r\n        \"pending_second_first\",\r\n        +new Date()\r\n      );\r\n      const BlockedUsers = await fetchBlockedRelationships(user.user.id);\r\n      console.log(\"blocked users\", BlockedUsers);\r\n      if (FriendsRequests) {\r\n        dispatch(setFriendRequests(FriendsRequests));\r\n      }\r\n      if (PenddingRequests) {\r\n        dispatch(setPendingRequests(PenddingRequests));\r\n      }\r\n      if (BlockedUsers) {\r\n        dispatch(setBlockedUsers(BlockedUsers));\r\n      }\r\n    };\r\n\r\n    if (user.user !== null) {\r\n      setName(user.user.name);\r\n      setUserId(user.user.user_id);\r\n      loadRequests();\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const changeButtonHandler = (newButton) => {\r\n    if (selectedButton === 0) {\r\n      if (friends.friendRequests.length > 20) {\r\n        dispatch(resetFriendRequests());\r\n      }\r\n    }\r\n    if (selectedButton === 1) {\r\n      if (friends.pendingRequests.length > 20) {\r\n        dispatch(resetPendingRequests());\r\n      }\r\n    }\r\n    setSelectedButton(newButton);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    let response = await fetch(\"http://localhost:5000/logout\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    let data = await response.json();\r\n    if (data.message === \"logged out\") {\r\n      dispatch(logout());\r\n      dispatch(removeAll());\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return;\r\n\r\n    socket.on(\"receiveFriendRequest\", function (senderName, id) {\r\n      console.log(\"SENDER\", senderName);\r\n      dispatch(\r\n        addFriendRequest({\r\n          newFriendRequest: {\r\n            name: senderName,\r\n            id,\r\n          },\r\n        })\r\n      );\r\n    });\r\n\r\n    return () => socket.off(\"receiveFriendRequest\");\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return;\r\n\r\n    socket.on(\"relationshipDeleted\", (relationshipId, type) => {\r\n      dispatch(\r\n        deleteRelationship({\r\n          relationshipId,\r\n          type,\r\n        })\r\n      );\r\n    });\r\n\r\n    return () => socket.off(\"relationshipDeleted\");\r\n  }, [socket]);\r\n\r\n  if (user.user === null) {\r\n    <></>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <SideBar name={name} user_id={userId} />\r\n      <div className=\"dashboard-panel-right\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/dashboard/\">\r\n              <div className=\"dashboard-buttons-container\">\r\n                <div className=\"dashboard-buttongroup\">\r\n                  <Button\r\n                    style={{ marginRight: 10 }}\r\n                    size={\"small\"}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 0 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(0)}\r\n                  >\r\n                    Requests\r\n                  </Button>\r\n                  <Button\r\n                    style={{ marginRight: 10 }}\r\n                    size={\"small\"}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 1 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(1)}\r\n                  >\r\n                    Pending\r\n                  </Button>\r\n                  <Button\r\n                    size={\"small\"}\r\n                    style={{ marginRight: 10 }}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 2 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(2)}\r\n                  >\r\n                    Blocked\r\n                  </Button>\r\n\r\n                  <Button\r\n                    size={\"small\"}\r\n                    style={{ marginRight: 10 }}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 3 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(3)}\r\n                  >\r\n                    Settings\r\n                  </Button>\r\n\r\n                  <Button\r\n                    size={\"small\"}\r\n                    style={{ marginRight: 10 }}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    onClick={() => handleLogout()}\r\n                    variant=\"contained\"\r\n                    color={\"secondary\"}\r\n                  >\r\n                    Logout{\" \"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              {selectedButton === 0 && <FriendRequestList />}\r\n              {selectedButton === 1 && <PenddingRequests />}\r\n              {selectedButton === 2 && <BlockedList />}\r\n              {selectedButton === 3 && <h2>Settings template</h2>}\r\n            </Route>\r\n            <Route path=\"/dashboard/:chanel\">\r\n              <h1>CHANEL</h1>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js",["91"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\n// const socket = useSocket();\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    channelId: null,\r\n    channelName: null,\r\n  },\r\n  reducers: {\r\n    setChannelId: (state, action) => {\r\n      state.app += action.payload;\r\n    },\r\n    // sendFriendRequest: (state, action) => {\r\n    //   const { user1, user2 } = action.payload;\r\n    //   socket.emit(\"send-friend-request\", { user1, user2 });\r\n    // },\r\n  },\r\n});\r\n\r\nexport const { setChannelId } = appSlice.actions;\r\n\r\nexport const selectChannelId = (state) => state.channelId;\r\nexport const selectChannelName = (state) => state.channelName;\r\n\r\nexport default appSlice.reducer;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js",["92"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const friendsSlice = createSlice({\r\n  name: \"friends\",\r\n  initialState: {\r\n    friends: [\"Marco\", \"Pedro\"],\r\n    friendRequests: [],\r\n    pendingRequests: [],\r\n    usersBlocked: [],\r\n  },\r\n  reducers: {\r\n    addFriend: (state, action) => {\r\n      const newFriend = action.payload.friend;\r\n      state.friends = [...state.friends, newFriend];\r\n    },\r\n    addFriendRequest: (state, action) => {\r\n      const newRequest = action.payload.newFriendRequest;\r\n      const tempArray = state.friendRequests;\r\n      tempArray.unshift(newRequest);\r\n      state.friendRequests = tempArray;\r\n    },\r\n    addPendingRequest: (state, action) => {\r\n      const newPendingRequest = action.payload.relationship;\r\n      const tempArray = state.pendingRequests;\r\n      tempArray.unshift(newPendingRequest);\r\n      state.pendingRequests = tempArray;\r\n    },\r\n    addBlockedUser: (state, action) => {\r\n      const newUserBlocked = action.payload.relationship;\r\n      const tempArray = state.usersBlocked;\r\n      tempArray.unshift(newUserBlocked);\r\n      state.usersBlocked = tempArray;\r\n    },\r\n    setBlockedUsers: (state, action) => {\r\n      state.usersBlocked = [...state.usersBlocked, ...action.payload];\r\n    },\r\n    setPendingRequests: (state, action) => {\r\n      state.pendingRequests = [...state.pendingRequests, ...action.payload];\r\n    },\r\n    setFriendRequests: (state, action) => {\r\n      state.friendRequests = [...state.friendRequests, ...action.payload];\r\n    },\r\n    resetFriendRequests: (state) => {\r\n      state.friendRequests = state.friendRequests.slice(0, 20);\r\n    },\r\n    resetPendingRequests: (state) => {\r\n      state.pendingRequests = state.pendingRequests.slice(0, 20);\r\n    },\r\n    deleteRelationship: (state, action) => {\r\n      const { relationshipId, type } = action.payload;\r\n\r\n      switch (type) {\r\n        case \"request_sender\":\r\n          state.pendingRequests = state.pendingRequests.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n        case \"pending_second_first\":\r\n          state.friendRequests = state.friendRequests.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n        case \"blocked_by_second\":\r\n        case \"blocked_by_first\":\r\n          state.usersBlocked = state.usersBlocked.filter(\r\n            (relationship) => relationship.id !== relationshipId\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    removeAll: (state) => {\r\n      state.friends = [];\r\n      state.friendRequests = [];\r\n      state.pendingRequests = [];\r\n      state.usersBlocked = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addFriend,\r\n  addFriendRequest,\r\n  setFriendRequests,\r\n  setPendingRequests,\r\n  addPendingRequest,\r\n  deleteRelationship,\r\n  resetFriendRequests,\r\n  removeAll,\r\n  addBlockedUser,\r\n  setBlockedUsers,\r\n  resetPendingRequests,\r\n} = friendsSlice.actions;\r\n\r\nexport const selectFriends = (state) => state.friends;\r\n\r\nexport default friendsSlice.reducer;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js",["93"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { green, grey } from \"@material-ui/core/colors\";\r\nimport {\r\n  selectFriends,\r\n  setFriendRequests,\r\n  deleteRelationship,\r\n  addBlockedUser,\r\n} from \"../features/friendsSlice\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { fetchRequests, blockRelationship } from \"../utils/useFetch\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n  accept: {\r\n    color: \"white\",\r\n    marginRight: 8,\r\n    backgroundColor: green[400],\r\n    \"&:hover\": {\r\n      background: green[500],\r\n    },\r\n  },\r\n  blockUser: {\r\n    color: \"white\",\r\n    marginLeft: 8,\r\n    backgroundColor: grey[800],\r\n    \"&:hover\": {\r\n      background: grey[500],\r\n    },\r\n  },\r\n}));\r\n\r\nfunction FriendRequestList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const socket = useSocket();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const friendRequests = friends.friendRequests;\r\n  const classes = useStyles();\r\n  const numberPerPage = 20;\r\n\r\n  const handleScroll = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e;\r\n    let bottom = Math.ceil(scrollHeight) - Math.round(scrollTop);\r\n    if (!loading) {\r\n      if (bottom === clientHeight) {\r\n        setPage((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const blockUserhandler = async (id, name) => {\r\n    let response = await blockRelationship(id, \"blocked_by_second\");\r\n\r\n    if (response) {\r\n      dispatch(\r\n        deleteRelationship({\r\n          relationshipId: id,\r\n          type: \"pending_second_first\",\r\n        })\r\n      );\r\n      dispatch(\r\n        addBlockedUser({\r\n          relationship: {\r\n            id,\r\n            name,\r\n            type: \"blocked_by_second\",\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDenyRequest = async (id) => {\r\n    socket.emit(\"deleteRelationShip\", id, \"pending_second_first\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      let lastTimestamp = friendRequests[friendRequests.length - 1].timestamp;\r\n      setLoading(true);\r\n      const newFriendRequests = await fetchRequests(\r\n        user.user.id,\r\n        numberPerPage,\r\n        page,\r\n        \"friend_request\",\r\n        lastTimestamp\r\n      );\r\n      if (newFriendRequests) {\r\n        dispatch(setFriendRequests(newFriendRequests));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (page > 1 && friendRequests.length > 0) {\r\n      loadRequests();\r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={friendRequests.length}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let request = friendRequests[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {friendRequests && (\r\n                      <div\r\n                        className=\"right-panel-friend-request-item\"\r\n                        key={request.id}\r\n                      >\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRight: 10 }}\r\n                        >\r\n                          {request.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{request.name}</p>\r\n                        <div className=\"friend-request-buttons-container\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className={classes.accept}\r\n                          >\r\n                            Accept\r\n                          </Button>\r\n\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={() => handleDenyRequest(request.id)}\r\n                            style={{ marginLeft: 8 }}\r\n                          >\r\n                            Deny\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            onClick={() =>\r\n                              blockUserhandler(request.id, request.name)\r\n                            }\r\n                            className={classes.blockUser}\r\n                          >\r\n                            Block\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n\r\n      {loading && <h1>Loading...</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendRequestList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js",["94"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js",["95"],"import React, { useRef } from \"react\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFriends } from \"../features/friendsSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n  unblock: {\r\n    color: \"white\",\r\n    marginLeft: 8,\r\n    backgroundColor: grey[800],\r\n    \"&:hover\": {\r\n      background: grey[500],\r\n    },\r\n  },\r\n}));\r\n\r\nconst handleScroll = (e) => {};\r\n\r\nfunction BlockedList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const socket = useSocket();\r\n  const friends = useSelector(selectFriends);\r\n  const blockedList = friends.usersBlocked;\r\n  const classes = useStyles();\r\n\r\n  const unblockUserHandler = (id, type) => {\r\n    socket.emit(\"deleteRelationShip\", id, type);\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={blockedList.length}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let blockedRelationship = blockedList[index];\r\n\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {blockedList && (\r\n                      <div className=\"right_panel_blocked_user_item\">\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRgith: 10 }}\r\n                        >\r\n                          {blockedRelationship.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{blockedRelationship.name}</p>\r\n                        <div className=\"blocked_user_button_container\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className={classes.unblock}\r\n                            onClick={() =>\r\n                              unblockUserHandler(\r\n                                blockedRelationship.id,\r\n                                blockedRelationship.type\r\n                              )\r\n                            }\r\n                          >\r\n                            Unblock\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlockedList;\r\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":16},{"ruleId":"100","severity":1,"message":"104","line":3,"column":23,"nodeType":"102","messageId":"103","endLine":3,"endColumn":28},{"ruleId":"105","severity":1,"message":"106","line":58,"column":6,"nodeType":"107","endLine":58,"endColumn":8,"suggestions":"108"},{"ruleId":"96","replacedBy":"109"},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","severity":1,"message":"111","line":13,"column":7,"nodeType":"102","messageId":"103","endLine":13,"endColumn":14},{"ruleId":"105","severity":1,"message":"112","line":56,"column":6,"nodeType":"107","endLine":56,"endColumn":8,"suggestions":"113"},{"ruleId":"105","severity":1,"message":"114","line":72,"column":6,"nodeType":"107","endLine":72,"endColumn":8,"suggestions":"115"},{"ruleId":"105","severity":1,"message":"106","line":117,"column":6,"nodeType":"107","endLine":117,"endColumn":14,"suggestions":"116"},{"ruleId":"105","severity":1,"message":"106","line":132,"column":6,"nodeType":"107","endLine":132,"endColumn":14,"suggestions":"117"},{"ruleId":"100","severity":1,"message":"118","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":52,"column":7,"nodeType":"121","messageId":"122","endLine":69,"endColumn":8},{"ruleId":"105","severity":1,"message":"123","line":118,"column":6,"nodeType":"107","endLine":118,"endColumn":12,"suggestions":"124"},{"ruleId":"105","severity":1,"message":"125","line":71,"column":6,"nodeType":"107","endLine":71,"endColumn":12,"suggestions":"126"},{"ruleId":"100","severity":1,"message":"127","line":3,"column":23,"nodeType":"102","messageId":"103","endLine":3,"endColumn":34},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["130"],["128"],["129"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.user'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'user.user'. Either include them or remove the dependency array.",["132"],["133"],["134"],"'useSocket' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dispatch', 'friendRequests', and 'user.user.id'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'dispatch', 'pendingRequestsList', and 'user.user.id'. Either include them or remove the dependency array.",["136"],"'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [dispatch]",{"range":"150","text":"151"},"Update the dependencies array to be: [user.user]",{"range":"152","text":"153"},"Update the dependencies array to be: [dispatch, history, user.user]",{"range":"154","text":"155"},"Update the dependencies array to be: [dispatch, socket]",{"range":"156","text":"157"},{"range":"158","text":"157"},"Update the dependencies array to be: [dispatch, friendRequests, page, user.user.id]",{"range":"159","text":"160"},"Update the dependencies array to be: [dispatch, page, pendingRequestsList, user.user.id]",{"range":"161","text":"162"},[1567,1569],"[dispatch]",[1815,1817],"[user.user]",[2255,2257],"[dispatch, history, user.user]",[3376,3384],"[dispatch, socket]",[3694,3702],[3089,3095],"[dispatch, friendRequests, page, user.user.id]",[2110,2116],"[dispatch, page, pendingRequestsList, user.user.id]"]