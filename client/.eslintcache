[{"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js":"11","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js":"12","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js":"13","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js":"14","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js":"15","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js":"16","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js":"17","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendsList.js":"18","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Settings.js":"19"},{"size":598,"mtime":1610432363698,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":2355,"mtime":1610772427205,"results":"23","hashOfConfig":"21"},{"size":660,"mtime":1609810396774,"results":"24","hashOfConfig":"21"},{"size":4630,"mtime":1610570650445,"results":"25","hashOfConfig":"21"},{"size":3692,"mtime":1610814729214,"results":"26","hashOfConfig":"21"},{"size":6704,"mtime":1610865589606,"results":"27","hashOfConfig":"21"},{"size":332,"mtime":1610575296489,"results":"28","hashOfConfig":"21"},{"size":457,"mtime":1610492089296,"results":"29","hashOfConfig":"21"},{"size":763,"mtime":1610404250872,"results":"30","hashOfConfig":"21"},{"size":5931,"mtime":1610858032196,"results":"31","hashOfConfig":"21"},{"size":621,"mtime":1610402770428,"results":"32","hashOfConfig":"21"},{"size":3370,"mtime":1610916125555,"results":"33","hashOfConfig":"21"},{"size":6448,"mtime":1610857082771,"results":"34","hashOfConfig":"21"},{"size":4208,"mtime":1610836820637,"results":"35","hashOfConfig":"21"},{"size":2748,"mtime":1610916340468,"results":"36","hashOfConfig":"21"},{"size":3382,"mtime":1610832586625,"results":"37","hashOfConfig":"21"},{"size":5624,"mtime":1610916372703,"results":"38","hashOfConfig":"21"},{"size":1135,"mtime":1610866791930,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1rj0bv7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\index.js",[],["88","89"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\App.js",["90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { purple, red, green, deepPurple } from \"@material-ui/core/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, selectUser } from \"./features/user\";\nimport \"./App.css\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"fontsource-roboto\";\nimport { SocketProvider } from \"./contexts/SocketProvider\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[400],\n    },\n    secondary: {\n      main: red[500],\n    },\n    type: \"dark\",\n  },\n});\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const [id, setId] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let response = await fetch(\"http://localhost:5000/user\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        let data = await response.json();\n\n        if (data != null) {\n          dispatch(\n            login({\n              email: data.email,\n              name: data.user_name,\n              user_id: data.user_id,\n              id: data.id,\n            })\n          );\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (user.user !== null) setId(user.user.user_id);\n  }, [user.user]);\n  // const [id, setId] = useLocalStorage(\"id\");\n  // const [name, setName] = useLocalStorage(\"name\");\n\n  if (loading) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <SocketProvider id={id}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/dashboard\">\n                <Dashboard />\n              </Route>\n            </Switch>\n          </Router>\n        </SocketProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\hooks\\useLocalStorage.js",[],["93","94"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Register.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Login.js",["95","96"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../features/user\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, TextField, InputAdornment } from \"@material-ui/core\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport \"../css/Login.css\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n    let response = await fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(body),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (data.message === \"Authenticated\") {\r\n      dispatch(\r\n        login({\r\n          email: data.user.email,\r\n          name: data.user.name,\r\n          user_id: data.user.user_id,\r\n          id: data.user.id,\r\n        })\r\n      );\r\n      window.location.replace(\"/dashboard\");\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.user != null) {\r\n      window.location.replace(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  if (user.user != null) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <LockOpenIcon\r\n        className=\"login-icon\"\r\n        style={{\r\n          margin: \"10px\",\r\n          alignSelf: \"center\",\r\n          backgroundColor: \"#7e57c2\",\r\n          padding: \"10px\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n      />\r\n      <form\r\n        className=\"login-form\"\r\n        action=\"submit\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n      >\r\n        <div className=\"login-errors\">\r\n          <p className=\"login-element error\">{errorMessage}</p>\r\n        </div>\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"Email\"\r\n          inputRef={emailRef}\r\n          error={error}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          className=\"login-element\"\r\n          placeholder=\"password\"\r\n          variant=\"outlined\"\r\n          inputRef={passwordRef}\r\n          error={error}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment\r\n                position=\"end\"\r\n                className=\"show-button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n        />\r\n        <div className=\"login-element\">\r\n          Need a new account?\r\n          <a href=\"/register\" className=\"link\">\r\n            {\" \"}\r\n            Register here :)\r\n          </a>\r\n        </div>\r\n        <Button\r\n          className=\"login-element\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Log in\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Dashboard.js",["97","98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SideBar from \"./SideBar\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { selectUser, logout } from \"../features/user\";\r\nimport FriendRequestList from \"./FriendRequestList\";\r\nimport Setttings from \"./Settings\";\r\nimport {\r\n  fetchFriends,\r\n  fetchRequests,\r\n  fetchBlockedRelationships,\r\n} from \"../utils/useFetch\";\r\nimport BlockedList from \"./BlockedList\";\r\nimport {\r\n  selectFriends,\r\n  addFriendRequest,\r\n  setFriends,\r\n  setFriendRequests,\r\n  resetFriendRequests,\r\n  resetPendingRequests,\r\n  setPendingRequests,\r\n  deleteRelationship,\r\n  setBlockedUsers,\r\n  removeAll,\r\n} from \"../features/friendsSlice\";\r\nimport \"../css/Dashboard.css\";\r\nimport PenddingRequests from \"./PendingRequestsList\";\r\n\r\nfunction Dashboard() {\r\n  let history = useHistory();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const [selectedButton, setSelectedButton] = useState(2);\r\n  const [name, setName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const socket = useSocket();\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      const friendsList = await fetchFriends(user.user.id, 20, 1, +new Date());\r\n\r\n      const FriendsRequests = await fetchRequests(\r\n        user.user.id,\r\n        20,\r\n        1,\r\n        \"friend_request\",\r\n        +new Date()\r\n      );\r\n      const PenddingRequests = await fetchRequests(\r\n        user.user.id,\r\n        20,\r\n        1,\r\n        \"pending_second_first\",\r\n        +new Date()\r\n      );\r\n      const BlockedUsers = await fetchBlockedRelationships(user.user.id);\r\n\r\n      if (friendsList) {\r\n        dispatch(setFriends(friendsList));\r\n      }\r\n      if (FriendsRequests) {\r\n        dispatch(setFriendRequests(FriendsRequests));\r\n      }\r\n      if (PenddingRequests) {\r\n        dispatch(setPendingRequests(PenddingRequests));\r\n      }\r\n      if (BlockedUsers) {\r\n        dispatch(setBlockedUsers(BlockedUsers));\r\n      }\r\n    };\r\n\r\n    if (user.user !== null) {\r\n      setName(user.user.name);\r\n      setUserId(user.user.user_id);\r\n      loadRequests();\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const changeButtonHandler = (newButton) => {\r\n    if (selectedButton === 0) {\r\n      if (friends.friendRequests.length > 20) {\r\n        dispatch(resetFriendRequests());\r\n      }\r\n    }\r\n    if (selectedButton === 1) {\r\n      if (friends.pendingRequests.length > 20) {\r\n        dispatch(resetPendingRequests());\r\n      }\r\n    }\r\n    setSelectedButton(newButton);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    let response = await fetch(\"http://localhost:5000/logout\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    let data = await response.json();\r\n    if (data.message === \"logged out\") {\r\n      dispatch(logout());\r\n      dispatch(removeAll());\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return;\r\n\r\n    socket.on(\"receiveFriendRequest\", function (senderName, id) {\r\n      dispatch(\r\n        addFriendRequest({\r\n          newFriendRequest: {\r\n            name: senderName,\r\n            id,\r\n          },\r\n        })\r\n      );\r\n    });\r\n\r\n    return () => socket.off(\"receiveFriendRequest\");\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return;\r\n\r\n    socket.on(\"relationshipDeleted\", (relationshipId, type) => {\r\n      dispatch(\r\n        deleteRelationship({\r\n          relationshipId,\r\n          type,\r\n        })\r\n      );\r\n    });\r\n\r\n    return () => socket.off(\"relationshipDeleted\");\r\n  }, [socket]);\r\n\r\n  if (user.user === null) {\r\n    <></>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <SideBar name={name} user_id={userId} />\r\n      <div className=\"dashboard-panel-right\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/dashboard/\">\r\n              <div className=\"dashboard-buttons-container\">\r\n                <div className=\"dashboard-buttongroup\">\r\n                  <Button\r\n                    style={{ marginRight: 10 }}\r\n                    size={\"small\"}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 0 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(0)}\r\n                  >\r\n                    Requests\r\n                  </Button>\r\n                  <Button\r\n                    style={{ marginRight: 10 }}\r\n                    size={\"small\"}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 1 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(1)}\r\n                  >\r\n                    Pending\r\n                  </Button>\r\n                  <Button\r\n                    size={\"small\"}\r\n                    style={{ marginRight: 10 }}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 2 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(2)}\r\n                  >\r\n                    Blocked\r\n                  </Button>\r\n\r\n                  <Button\r\n                    size={\"small\"}\r\n                    style={{ marginRight: 10 }}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    variant={selectedButton === 3 ? \"contained\" : \"text\"}\r\n                    onClick={() => changeButtonHandler(3)}\r\n                  >\r\n                    Settings\r\n                  </Button>\r\n\r\n                  <Button\r\n                    size={\"small\"}\r\n                    style={{ marginRight: 10 }}\r\n                    className=\"dashboard-buttongroup-button\"\r\n                    onClick={() => handleLogout()}\r\n                    variant=\"contained\"\r\n                    color={\"secondary\"}\r\n                  >\r\n                    Logout{\" \"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              {selectedButton === 0 && <FriendRequestList />}\r\n              {selectedButton === 1 && <PenddingRequests />}\r\n              {selectedButton === 2 && <BlockedList />}\r\n              {selectedButton === 3 && <Setttings />}\r\n            </Route>\r\n            <Route path=\"/dashboard/:chanel\">\r\n              <h1>CHANEL</h1>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\app\\store.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\user.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\app.js",["100"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\n// const socket = useSocket();\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    channelId: null,\r\n    channelName: null,\r\n  },\r\n  reducers: {\r\n    setChannelId: (state, action) => {\r\n      state.app += action.payload;\r\n    },\r\n    // sendFriendRequest: (state, action) => {\r\n    //   const { user1, user2 } = action.payload;\r\n    //   socket.emit(\"send-friend-request\", { user1, user2 });\r\n    // },\r\n  },\r\n});\r\n\r\nexport const { setChannelId } = appSlice.actions;\r\n\r\nexport const selectChannelId = (state) => state.channelId;\r\nexport const selectChannelName = (state) => state.channelName;\r\n\r\nexport default appSlice.reducer;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\SideBar.js",["101","102","103","104"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport { Tabs, Tab, Avatar, Modal, TextField } from \"@material-ui/core\";\r\nimport { TabPanel, TabContext } from \"@material-ui/lab\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../css/SideBar.css\";\r\nimport { selectUser } from \"../features/user\";\r\nimport {\r\n  selectFriends,\r\n  resetFriends,\r\n  addPendingRequest,\r\n  addFriend,\r\n  deleteRelationship,\r\n} from \"../features/friendsSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FriendsList from \"./FriendsList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    backgroundColor: \"#2f3136\",\r\n    width: 350,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: \"#36393f\",\r\n    outline: \"none\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    padding: theme.spacing(2),\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  tabPanel: {\r\n    padding: 0,\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction SideBar({ name, user_id }) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n\r\n  const classes = useStyles();\r\n  const modalInputRef = useRef();\r\n  const socket = useSocket();\r\n  const [friends, setFriends] = useState([]);\r\n  const [selectedTab, setSelectedTab] = useState(\"2\");\r\n  const [openFriendModal, setOpenFriendModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n\r\n  let clickHandler = () => {\r\n    setModalMessage(\"\");\r\n    setOpenFriendModal(true);\r\n  };\r\n\r\n  let handleClose = () => {\r\n    openFriendModal && setOpenFriendModal(false);\r\n  };\r\n\r\n  const changeTabHandler = (value) => {\r\n    setSelectedTab(value);\r\n    if (value === \"1\") {\r\n      dispatch(resetFriends());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return;\r\n\r\n    socket.on(\r\n      \"friendRequestAccepted\",\r\n      (relationshipId, name, user_id, type) => {\r\n        let relationshipType =\r\n          type === \"receiver\" ? \"pending_second_first\" : \"request_sender\";\r\n\r\n        dispatch(\r\n          deleteRelationship({\r\n            relationshipId,\r\n            type: relationshipType,\r\n          })\r\n        );\r\n\r\n        dispatch(\r\n          addFriend({\r\n            friend: {\r\n              relationshipId,\r\n              name,\r\n              user_id,\r\n            },\r\n          })\r\n        );\r\n      }\r\n    );\r\n\r\n    return () => socket.off(\"friendRequestAccepted\");\r\n  }, [socket]);\r\n\r\n  let handleSendFriendRequest = (e) => {\r\n    e.preventDefault();\r\n    let user2 = modalInputRef.current.value;\r\n    let user1 = user.user;\r\n    socket.emit(\"sendFriendRequest\", user1.name, user1.id, user2);\r\n    socket.on(\"returnFriendRequestResponse\", function (message, name, id) {\r\n      if (!message) {\r\n        setOpenFriendModal(false);\r\n        dispatch(\r\n          addPendingRequest({\r\n            relationship: {\r\n              name,\r\n              id,\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        setModalMessage(message);\r\n      }\r\n      socket.off(\"returnFriendRequestResponse\");\r\n    });\r\n  };\r\n\r\n  const bodyFriendModal = (\r\n    <div className={classes.paper}>\r\n      <form\r\n        action=\"submit\"\r\n        className=\"modal-form\"\r\n        onSubmit={(e) => {\r\n          handleSendFriendRequest(e);\r\n        }}\r\n      >\r\n        <div className=\"error\" style={{ margin: 8 }}>\r\n          {modalMessage}\r\n        </div>\r\n        <h3 style={{ margin: 8 }}>Send a request to</h3>\r\n        <TextField\r\n          className=\"modal-text-field\"\r\n          placeholder=\"Type the user name you want to add\"\r\n          variant=\"outlined\"\r\n          inputRef={modalInputRef}\r\n          style={{ margin: 8 }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ margin: 8 }}\r\n        >\r\n          Send Friend Request\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={`sidebar`}>\r\n      <TabContext value={selectedTab}>\r\n        <div className=\"sidebar-tabs\">\r\n          {\" \"}\r\n          <div className=\"sidebar-tabs-container\">\r\n            {\" \"}\r\n            <Tabs\r\n              value={selectedTab}\r\n              variant=\"fullWidth\"\r\n              centered\r\n              onChange={(e, value) => changeTabHandler(value)}\r\n            >\r\n              <Tab label=\"Messages\" value=\"1\" />\r\n              <Tab label=\"Friends\" value=\"2\" />\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-tabs-panel\">\r\n          <TabPanel value=\"1\" className={classes.tabPanel}>\r\n            Item One\r\n          </TabPanel>\r\n          <TabPanel value=\"2\" className={classes.tabPanel}>\r\n            <FriendsList></FriendsList>\r\n          </TabPanel>\r\n        </div>\r\n        <div className=\"sidebar-bottom-container\">\r\n          <div className=\"sidebar-avatar-wrapper\">\r\n            <Avatar>{name.charAt(0).toUpperCase()}</Avatar>\r\n            <div className=\"sidebar-avatar-info\">\r\n              <p>{name}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-button\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size={\"large\"}\r\n            fullWidth\r\n            onClick={() => clickHandler()}\r\n          >\r\n            Add Friend\r\n            {/* {selectedTab === \"1\" ? \"Create new Chat\" : \"Add new Contact\"} */}\r\n          </Button>\r\n        </div>\r\n      </TabContext>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={openFriendModal}\r\n        onClose={handleClose}\r\n      >\r\n        {bodyFriendModal}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\contexts\\SocketProvider.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\features\\friendsSlice.js",["105"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendRequestList.js",["106"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { green, grey } from \"@material-ui/core/colors\";\r\nimport {\r\n  selectFriends,\r\n  setFriendRequests,\r\n  deleteRelationship,\r\n  addBlockedUser,\r\n} from \"../features/friendsSlice\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { fetchRequests, blockRelationship } from \"../utils/useFetch\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n  accept: {\r\n    color: \"white\",\r\n    marginRight: 8,\r\n    backgroundColor: green[400],\r\n    \"&:hover\": {\r\n      background: green[500],\r\n    },\r\n  },\r\n  blockUser: {\r\n    color: \"white\",\r\n    marginLeft: 8,\r\n    backgroundColor: grey[800],\r\n    \"&:hover\": {\r\n      background: grey[500],\r\n    },\r\n  },\r\n}));\r\n\r\nfunction FriendRequestList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const socket = useSocket();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const friendRequests = friends.friendRequests;\r\n  const classes = useStyles();\r\n  const numberPerPage = 20;\r\n\r\n  const handleScroll = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e;\r\n    let bottom = Math.ceil(scrollHeight) - Math.round(scrollTop);\r\n    if (!loading) {\r\n      if (bottom === clientHeight) {\r\n        setPage((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addFriendHandler = async (id, receiverName, senderName) => {\r\n    console.log(\"USER ID\", user.user_id);\r\n    socket.emit(\"addFriend\", id, senderName, receiverName, user.user.user_id);\r\n  };\r\n\r\n  const blockUserhandler = async (id, name) => {\r\n    let response = await blockRelationship(id, \"blocked_by_second\");\r\n\r\n    if (response) {\r\n      dispatch(\r\n        deleteRelationship({\r\n          relationshipId: id,\r\n          type: \"pending_second_first\",\r\n        })\r\n      );\r\n      dispatch(\r\n        addBlockedUser({\r\n          relationship: {\r\n            id,\r\n            name,\r\n            type: \"blocked_by_second\",\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDenyRequest = async (id) => {\r\n    socket.emit(\"deleteRelationShip\", id, \"pending_second_first\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      let lastTimestamp = friendRequests[friendRequests.length - 1].timestamp;\r\n      setLoading(true);\r\n      const newFriendRequests = await fetchRequests(\r\n        user.user.id,\r\n        numberPerPage,\r\n        page,\r\n        \"friend_request\",\r\n        lastTimestamp\r\n      );\r\n      if (newFriendRequests) {\r\n        dispatch(setFriendRequests(newFriendRequests));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (page > 1 && friendRequests.length > 0) {\r\n      loadRequests();\r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={friendRequests.length}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let request = friendRequests[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {friendRequests && (\r\n                      <div\r\n                        className=\"right-panel-friend-request-item\"\r\n                        key={request.id}\r\n                      >\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRight: 10 }}\r\n                        >\r\n                          {request.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{request.name}</p>\r\n                        <div className=\"friend-request-buttons-container\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className={classes.accept}\r\n                            onClick={() =>\r\n                              addFriendHandler(\r\n                                request.id,\r\n                                user.user.name,\r\n                                request.name\r\n                              )\r\n                            }\r\n                          >\r\n                            Accept\r\n                          </Button>\r\n\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={() => handleDenyRequest(request.id)}\r\n                            style={{ marginLeft: 8 }}\r\n                          >\r\n                            Deny\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            onClick={() =>\r\n                              blockUserhandler(request.id, request.name)\r\n                            }\r\n                            className={classes.blockUser}\r\n                          >\r\n                            Block\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n\r\n      {loading && <h1>Loading...</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendRequestList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\PendingRequestsList.js",["107"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFriends, setPendingRequests } from \"../features/friendsSlice\";\r\nimport { selectUser } from \"../features/user\";\r\nimport { Button, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\nimport { fetchRequests } from \"../utils/useFetch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nfunction PendingRequestsList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const socket = useSocket();\r\n  const classes = useStyles();\r\n  const user = useSelector(selectUser);\r\n  const friends = useSelector(selectFriends);\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const pendingRequestsList = friends.pendingRequests;\r\n\r\n  const handleScroll = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e;\r\n    let bottom = Math.ceil(scrollHeight) - Math.round(scrollTop);\r\n    if (!loading) {\r\n      if (bottom === clientHeight) {\r\n        setPage((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadRequests = async () => {\r\n      let lastTimestamp =\r\n        pendingRequestsList[pendingRequestsList.length - 1].timestamp;\r\n      setLoading(true);\r\n      const newPendingRequests = await fetchRequests(\r\n        user.user.id,\r\n        20,\r\n        page,\r\n        \"pending_request\",\r\n        lastTimestamp\r\n      );\r\n      console.log(\"NEW REQUEST\", newPendingRequests);\r\n      if (newPendingRequests) {\r\n        dispatch(setPendingRequests(newPendingRequests));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (page > 1 && pendingRequestsList.length > 0) {\r\n      loadRequests();\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    // setpendingRequestsList(friends.pendingRequests);\r\n  }, [friends.pendingRequests]);\r\n\r\n  const handleCancelRequest = (id) => {\r\n    socket.emit(\"deleteRelationShip\", id, \"request_sender\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={pendingRequestsList.length}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let request = pendingRequestsList[index];\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"liste_item\">\r\n                    <div className=\"right-panel-pending-request-item\">\r\n                      <Avatar className={classes.small}>\r\n                        {request.name.charAt(0).toUpperCase()}\r\n                      </Avatar>\r\n                      <p>{request.name}</p>\r\n                      <div className=\"pending-request-button-container\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            handleCancelRequest(request.id);\r\n                          }}\r\n                        >\r\n                          Cancel Request\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n      {loading && <h1>Loading...</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingRequestsList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\utils\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\BlockedList.js",["108"],"import React, { useRef } from \"react\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFriends } from \"../features/friendsSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useSocket } from \"../contexts/SocketProvider\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n} from \"react-virtualized\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    marginRight: 10,\r\n  },\r\n  unblock: {\r\n    color: \"white\",\r\n    marginLeft: 8,\r\n    backgroundColor: grey[800],\r\n    \"&:hover\": {\r\n      background: grey[500],\r\n    },\r\n  },\r\n}));\r\n\r\nconst handleScroll = (e) => {};\r\n\r\nfunction BlockedList() {\r\n  const cache = useRef(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      defaultHeight: 50,\r\n    })\r\n  );\r\n  const socket = useSocket();\r\n  const friends = useSelector(selectFriends);\r\n  const blockedList = friends.usersBlocked;\r\n  const classes = useStyles();\r\n\r\n  const unblockUserHandler = (id, type) => {\r\n    socket.emit(\"deleteRelationShip\", id, type);\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <AutoSizer>\r\n        {({ width, height }) => (\r\n          <List\r\n            width={width}\r\n            height={height}\r\n            rowHeight={cache.current.rowHeight}\r\n            deferredMeasurementCache={cache.current}\r\n            rowCount={blockedList.length}\r\n            onScroll={(e) => handleScroll(e)}\r\n            rowRenderer={({ key, index, style, parent }) => {\r\n              let blockedRelationship = blockedList[index];\r\n\r\n              return (\r\n                <CellMeasurer\r\n                  key={key}\r\n                  cache={cache.current}\r\n                  parent={parent}\r\n                  columnIndex={0}\r\n                  rowIndex={index}\r\n                >\r\n                  <div style={style} className=\"list_item\">\r\n                    {blockedList && (\r\n                      <div className=\"right_panel_blocked_user_item\">\r\n                        <Avatar\r\n                          className={classes.small}\r\n                          style={{ marginRgith: 10 }}\r\n                        >\r\n                          {blockedRelationship.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        <p>{blockedRelationship.name}</p>\r\n                        <div className=\"blocked_user_button_container\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className={classes.unblock}\r\n                            onClick={() =>\r\n                              unblockUserHandler(\r\n                                blockedRelationship.id,\r\n                                blockedRelationship.type\r\n                              )\r\n                            }\r\n                          >\r\n                            Unblock\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CellMeasurer>\r\n              );\r\n            }}\r\n          ></List>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlockedList;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\FriendsList.js",["109"],"C:\\Users\\bh02\\Documents\\GitHub\\project-group-chat-app\\client\\src\\components\\Settings.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":16},{"ruleId":"114","severity":1,"message":"118","line":3,"column":23,"nodeType":"116","messageId":"117","endLine":3,"endColumn":28},{"ruleId":"119","severity":1,"message":"120","line":58,"column":6,"nodeType":"121","endLine":58,"endColumn":8,"suggestions":"122"},{"ruleId":"110","replacedBy":"123"},{"ruleId":"112","replacedBy":"124"},{"ruleId":"114","severity":1,"message":"125","line":13,"column":7,"nodeType":"116","messageId":"117","endLine":13,"endColumn":14},{"ruleId":"119","severity":1,"message":"126","line":56,"column":6,"nodeType":"121","endLine":56,"endColumn":8,"suggestions":"127"},{"ruleId":"119","severity":1,"message":"128","line":83,"column":6,"nodeType":"121","endLine":83,"endColumn":8,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"120","line":127,"column":6,"nodeType":"121","endLine":127,"endColumn":14,"suggestions":"130"},{"ruleId":"119","severity":1,"message":"120","line":142,"column":6,"nodeType":"121","endLine":142,"endColumn":14,"suggestions":"131"},{"ruleId":"114","severity":1,"message":"132","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"133","line":10,"column":3,"nodeType":"116","messageId":"117","endLine":10,"endColumn":16},{"ruleId":"114","severity":1,"message":"134","line":55,"column":10,"nodeType":"116","messageId":"117","endLine":55,"endColumn":17},{"ruleId":"114","severity":1,"message":"135","line":55,"column":19,"nodeType":"116","messageId":"117","endLine":55,"endColumn":29},{"ruleId":"119","severity":1,"message":"120","line":105,"column":6,"nodeType":"121","endLine":105,"endColumn":14,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":56,"column":7,"nodeType":"139","messageId":"140","endLine":78,"endColumn":8},{"ruleId":"119","severity":1,"message":"141","line":123,"column":6,"nodeType":"121","endLine":123,"endColumn":12,"suggestions":"142"},{"ruleId":"119","severity":1,"message":"143","line":71,"column":6,"nodeType":"121","endLine":71,"endColumn":12,"suggestions":"144"},{"ruleId":"114","severity":1,"message":"145","line":3,"column":23,"nodeType":"116","messageId":"117","endLine":3,"endColumn":34},{"ruleId":"119","severity":1,"message":"146","line":113,"column":6,"nodeType":"121","endLine":113,"endColumn":12,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["150"],["148"],["149"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.user'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'user.user'. Either include them or remove the dependency array.",["152"],["153"],["154"],"'useSocket' is defined but never used.","'selectFriends' is defined but never used.","'friends' is assigned a value but never used.","'setFriends' is assigned a value but never used.",["155"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dispatch', 'friendRequests', and 'user.user.id'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'dispatch', 'pendingRequestsList', and 'user.user.id'. Either include them or remove the dependency array.",["157"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'friendsList', and 'user.user.id'. Either include them or remove the dependency array.",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"165","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [dispatch]",{"range":"175","text":"176"},"Update the dependencies array to be: [user.user]",{"range":"177","text":"178"},"Update the dependencies array to be: [dispatch, history, user.user]",{"range":"179","text":"180"},"Update the dependencies array to be: [dispatch, socket]",{"range":"181","text":"182"},{"range":"183","text":"182"},{"range":"184","text":"182"},"Update the dependencies array to be: [dispatch, friendRequests, page, user.user.id]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, page, pendingRequestsList, user.user.id]",{"range":"187","text":"188"},"Update the dependencies array to be: [dispatch, friendsList, page, user.user.id]",{"range":"189","text":"190"},[1567,1569],"[dispatch]",[1815,1817],"[user.user]",[2445,2447],"[dispatch, history, user.user]",[3524,3532],"[dispatch, socket]",[3842,3850],[2686,2694],[3290,3296],"[dispatch, friendRequests, page, user.user.id]",[2110,2116],"[dispatch, page, pendingRequestsList, user.user.id]",[3130,3136],"[dispatch, friendsList, page, user.user.id]"]